


#输出格式有四种   HTMLLayout 等 的输出 一般不用
#1. PatternLayout    自定义格式 常用
#2. HTMLLayout
#3. SimpleLayout
#4. TTCCLayout
#log4j.appender.Console=org.apache.log4j.ConsoleAppender
#log4j.appender.Console.layout=org.apache.log4j.TTCCLayout


#
#PatternLayout是我们以后推荐使用的，很灵活；
#有个ConversionPattern属性，灵活配置输出属性：
#%m 输出代码中指定的消息；
#%M 输出打印该条日志的方法名；
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL；
#%r 输出自应用启动到输出该log信息耗费的毫秒数；
#%c 输出所属的类目，通常就是所在类的全名；
#%t 输出产生该日志事件的线程名；
#%n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n”；
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，输出类似：2002-10-18 22:10:28,921；
#%l 输出日志事件的发生位置，及在代码中的行数；

log4j.rootLogger=DEBUG, Console ,File ,DailyRollingFile ,RollingFile ,IFILE
#,jdbc
#



#Console
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n

#File   一般自己测试用，没有任何的逻辑，一直累加         C://log4j//logFile.log
log4j.appender.File = org.apache.log4j.FileAppender
log4j.appender.File.File = ./log_log4j/logFile.log
log4j.appender.File.layout = org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n

#DailyRollingFile     每天一个
log4j.appender.DailyRollingFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.DailyRollingFile.File = ./log_log4j/logDailyRollingFile.log
log4j.appender.DailyRollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.DailyRollingFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n

#RollingFile         循环累加  本示例最多三个  每个UI大1kb  (正常应该是100M这个量级，365个)
log4j.appender.RollingFile = org.apache.log4j.RollingFileAppender
log4j.appender.RollingFile.File = ./log_log4j/logRollingFile.log
log4j.appender.RollingFile.MaxFileSize=1KB
log4j.appender.RollingFile.MaxBackupIndex=3
log4j.appender.RollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.RollingFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n


#ERRORFile

log4j.appender.IFILE = org.apache.log4j.FileAppender
log4j.appender.IFILE.File = ./log_log4j/INFO_ONLY.log
log4j.appender.IFILE.layout = org.apache.log4j.PatternLayout
log4j.appender.IFILE.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n
log4j.appender.IFILE.Threshold = WARN  
log4j.appender.IFILE.append = true  

#数据库输出      ---配置了，没有效果
#log4j.appender.jdbc=org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.jdbc.driver=com.mysql.jdbc.Driver
#log4j.appender.jdbc.URL=jdbc:mysql://127.0.0.1:3306/ssm2?characterEncoding=utf8&useSSL=true
#log4j.appender.jdbc.user=root
#log4j.appender.jdbc.password=123456
#log4j.appender.jdbc.sql=insert into log_icecoldmonitor(level,category,thread,time,location,note) values('%p','%c','%t','%d{yyyy-MM-dd HH:mm:ss:SSS}','%l','%m')
